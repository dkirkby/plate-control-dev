# configuration file

[DEFAULT]
#Identifiers
SERIAL_ID = string() 
BUS_ID = integer()
DEVICE_ID = string() # string, id number of location on the petal or plate
PETAL_ID = string() # string, id of the petal or plate it is mounted on
MOTOR_ID_T = integer()		 
MOTOR_ID_P = integer() 

#Positioner Kinematics
LENGTH_R1 = float(default = 3.0)  # mm  
LENGTH_R2 = float(default = 3.0)  # mm
POLYN_T0 = float(default = 0.0)   # deg
POLYN_T1 = float(default = 1.0)   # deg
POLYN_T2 = float(default = 0.0)   # deg/deg^2
POLYN_P0 = float(default = 0.0)   # deg      Pobserver = P0 + P1*Pshaft + P2*Pshaft^2
POLYN_P1 = float(default = 1.0)   # deg
POLYN_P2 = float(default = 0.0)   # deg/deg^2
POLYN_X0 = float(default = 0.0)   # deg      Xobserver = X0 + X1*Xpositioner
POLYN_X1 = float(default = 1.0)   # deg
POLYN_Y0 = float(default = 0.0)   # deg      Yobserver = Y0 + Y1*Ypositioner
POLYN_Y1 = float(default = 1.0)   # deg
PHYSICAL_RANGE_T = float(default = 380.0) # deg      theta range of travel  
PHYSICAL_RANGE_P = float(default = 200.0) # deg

#Backlash and Limit Handling
BACKLASH = float(default = 3.0)   # deg  in normal operation, always stay shy of the hardstops by this amount (at both ends of the travel range)
PRINCIPLE_HARDSTOP_DIR_T = float(default = -1.0) # +1 (use hardstop at max of range) or -1 (use hardstop at min of range) or 0 (no hardstop exists)
PRINCIPLE_HARDSTOP_CLEARANCE_T = float(default = 10.0) # float, minimum distance in deg to stay clear of theta principle hardstop
SECONDARY_HARDSTOP_CLEARANCE_T =  float(default = 5.0) # float, minimum distance in deg to stay clear of theta secondary hardstop
PRINCIPLE_HARDSTOP_DIR_P = float(default = +1.0) # +1 (use hardstop at max of range) or -1 (use hardstop at min of range) or 0 (no hardstop exists)
PRINCIPLE_HARDSTOP_CLEARANCE_P =  float(default = 5.0) # float, minimum distance in deg to stay clear of phi principle hardstop
SECONDARY_HARDSTOP_CLEARANCE_P =  float(default = 5.0) # float, minimum distance in deg to stay clear of phi secondary hardstop
ALLOW_EXCEED_LIMITS = boolean(default = False) # boolean  flag to allow positioner to go past software limits or not. exercise some caution if setting this true
LIMIT_SEEK_EXCEED_RANGE_FACTOR =  float(default = 1.3)  # factor beyond nominal range to use when seeking hardstops
SHOULD_DEBOUNCE_HARDSTOPS = boolean(default = True)  # boolean   flag to turn on/off automatic debounce from hardstops. typically leave on for homing, but turn off if need to measure full physical range of travel
BACKLASH_REMOVAL_BACKUP_FRACTION = float(default = 0.5)  # when move direction == backlash_removal_direction, undershoot by this fraction of BACKLASH, then backup by (1-fraction)*BACKLASH, then advance by BACKLASH

#Motor Currents
CURR_SPIN_UP_DOWN = float(default = 100.0) # spin up / spin down current
CURR_CRUISE = float(default = 70.0) # cruise current
CURR_CREEP = float(default = 70.0)  # creep current
SPINUPDOWN_DISTANCE = float(default = 628.2)  # float, distance at the motor shaft in deg over which to spin up to cruise speed or down from cruise speed
CREEP_PERIOD = integer(default = 2) # int, number of timer intervals corresponding to a creep step
ONLY_CREEP  = boolean(default = False)     # boolean, if true disable cruising speed
FINAL_CREEP_ON  = boolean(default = True)    # boolean, if true do a finishing creep move after a cruise
BACKLASH_REMOVAL_ON = boolean(default = True)   # boolean, if true do an antibacklash sequence at end of a move
FINAL_CREEP_DIST  = float(default = 180.0)  # float, distance in deg to creep after a cruise
ANTIBACKLASH_FINAL_MOVE_DIR_T =  float(default = -1.0)  # +1 or -1 
ANTIBACKLASH_FINAL_MOVE_DIR_P =  float(default = +1.0)  # +1 or -1 
CREEP_TO_LIMITS =  boolean(default = False) # boolean if true , when approaching hardstops only creep up on them
HOLD_CURRENT =  float(default = 0.0) # can be set to zero to completely power off theta motors after moving

#Motor Characteristics
MOTOR_CCW_DIR_T = float(default = 1) # +1 or -1, defining as-wired motor's counter-clockwise direction. note 5.N.01=-1, 5.M.01=+1, 6.M.01=-1, 6.M.02=+1
MOTOR_CCW_DIR_P = float(default = 1)   # +1 or -1, defining as-wired motor's counter-clockwise direction. note 5.N.01=-1, 5.M.01=-1, 6.M.01=-1, 6.M.02=+1
GEAR_T = float(default='maxon')  # gear ratio of theta axis
GEAR_P = float(default='maxon')  # gear ratio of phi axis